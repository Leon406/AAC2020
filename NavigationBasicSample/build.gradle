/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion build_versions.compile_sdk
    defaultConfig {
        applicationId "com.example.android.navigationsample"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    // Robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/uiTest/java"
        }
        test {
            java.srcDirs += "src/uiTest/java"
            resources.srcDirs += 'src/uiTest/resources'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation quickDep
//    implementation app_compat
//    implementation material
//    implementation core_ktx
    implementation supX.constraint

    implementation lifecycle.viewmodel_ktx

    implementation navigation.fragment_ktx
    implementation navigation.runtime_ktx
    implementation fragment.runtime_ktx
    // "androidx.fragment:fragment-testing" must be scoped to all sourcesets.
    implementation fragment.testing

    // Espresso and UI Testing
    androidTestImplementation atsl.ext_junit
    androidTestImplementation espresso.core
    androidTestImplementation espresso.contrib
    androidTestImplementation espresso.intents
    androidTestImplementation navigation.testing
    androidTestImplementation truth

    // Host-side tests
    testImplementation atsl.ext_junit
    testImplementation robolectric
    // Espresso API running in Robolectric
    testImplementation espresso.core
    testImplementation espresso.contrib
    testImplementation espresso.intents
    testImplementation navigation.testing
    testImplementation truth
}
